{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syedk\\\\Desktop\\\\blinklist-app\\\\src\\\\components\\\\organisms\\\\SearchField\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { TextField, Grid, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Search } from \"@mui/icons-material\";\nimport BookCard from \"../BookCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchField = () => {\n  _s();\n\n  const [searchValue, setSearchValue] = useState('');\n\n  const IconNText = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Search by title or author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/books').then(res => res.json()).then(data => {\n      // eslint-disable-next-line eqeqeq\n      if (data != books) setBooks(data);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: /*#__PURE__*/_jsxDEV(IconNText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this),\n      variant: \"standard\",\n      value: searchValue,\n      onChange: event => setSearchValue(event.target.value),\n      sx: {\n        \"marginBottom\": 2,\n        \"width\": 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      wrap: \"wrap\",\n      sx: {\n        marginTop: 2,\n        marginBottom: 2\n      },\n      children: books.map(book => {\n        // eslint-disable-next-line eqeqeq\n        if (searchValue == '') {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        } // eslint-disable-next-line eqeqeq\n        else {\n          if (book.title.startsWith(searchValue)) {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(BookCard, {\n                id: book.id,\n                author: book.author,\n                title: book.title,\n                pic: book.image,\n                state: book.state,\n                renderState: \"\"\n              }, book.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 23\n            }, this);\n          } // eslint-disable-next-line eqeqeq\n\n\n          if (book.author.startsWith(searchValue)) {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(BookCard, {\n                id: book.id,\n                author: book.author,\n                title: book.title,\n                pic: book.image,\n                state: book.state,\n                renderState: \"\"\n              }, book.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this);\n          }\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchField, \"OmK77nJMbRP0kwK7WHnU6CMaW+Q=\");\n\n_c = SearchField;\nexport default SearchField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchField\");","map":{"version":3,"sources":["C:/Users/syedk/Desktop/blinklist-app/src/components/organisms/SearchField/index.tsx"],"names":["TextField","Grid","Typography","React","useEffect","useState","Search","BookCard","SearchField","searchValue","setSearchValue","IconNText","books","setBooks","fetch","then","res","json","data","event","target","value","marginTop","marginBottom","map","book","title","startsWith","id","author","image","state"],"mappings":"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","sourcesContent":["import { TextField ,Grid ,Typography} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {Search} from \"@mui/icons-material\";\r\nimport BookCard from \"../BookCard\";\r\n\r\ninterface BookDetails{\r\n  id:number;\r\n  title:string;\r\n  image:string;\r\n  author:string;\r\n  state:string;\r\n}\r\nconst SearchField=()=>{\r\n    const [searchValue,setSearchValue]=useState('')\r\n    const IconNText=()=>{\r\n        return(\r\n            <Grid container>\r\n            <Grid item>\r\n                <Search />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">\r\n                Search by title or author\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n    }\r\n    const [books,setBooks]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:8000/books')\r\n        .then(res =>res.json())\r\n        .then(data => {\r\n            // eslint-disable-next-line eqeqeq\r\n            if(data != books)\r\n                setBooks(data)\r\n            }\r\n            )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[searchValue])\r\n    return(\r\n      <>\r\n        <TextField \r\n            label={<IconNText />}\r\n            variant=\"standard\" \r\n            value={searchValue} \r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>)=>setSearchValue(event.target.value)} \r\n            sx={{\"marginBottom\":2,\"width\":400}} />\r\n\r\n        <Grid container spacing={2} wrap=\"wrap\" sx={{marginTop:2,marginBottom:2}}>\r\n        {/* eslint-disable-next-line array-callback-return*/}\r\n        {books.map((book:BookDetails) =>{\r\n            // eslint-disable-next-line eqeqeq\r\n            if(searchValue==''){\r\n              return <></>\r\n            }\r\n            // eslint-disable-next-line eqeqeq\r\n            else{\r\n              if((book.title).startsWith(searchValue)){\r\n                  return (\r\n                      <Grid item xs={12} sm={8} md={4} >\r\n                      <BookCard \r\n                        key={book.id} \r\n                        id={book.id} \r\n                        author={book.author} \r\n                        title={book.title} \r\n                        pic={book.image} \r\n                        state={book.state} \r\n                        renderState=\"\"/>\r\n                      </Grid>\r\n                  )\r\n              }\r\n              // eslint-disable-next-line eqeqeq\r\n              if((book.author).startsWith(searchValue)){\r\n                  return (\r\n                      <Grid item xs={12} sm={8} md={4} >\r\n                      <BookCard \r\n                        key={book.id} \r\n                        id={book.id} \r\n                        author={book.author} \r\n                        title={book.title} \r\n                        pic={book.image} \r\n                        state={book.state} \r\n                        renderState=\"\"/>\r\n                      </Grid>\r\n                  )\r\n              }\r\n          }\r\n        })\r\n        }\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\nexport default SearchField;"]},"metadata":{},"sourceType":"module"}